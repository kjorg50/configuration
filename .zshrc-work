# If you come from bash you might have to change your $PATH.
export PATH="$HOME/bin:/usr/local/bin:/usr/bin:/usr/sbin$PATH"

# Path to your oh-my-zsh installation.
export ZSH="/Users/kyle.jorgensen/.oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="cloud"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git terraform scala golang aws docker)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="subl ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias k="kubectl --kubeconfig=/Users/kyle.jorgensen/k8s/kubeconfig"
alias k="kubectl"
alias ks4="export KUBECONFIG=$HOME/.kube/kube-config-s0004"

# Set groovy home
export GROOVY_HOME=/usr/local/opt/groovy/libexec
# Add to PATH
# Set groovy home
export PATH="$PATH:$GROOVY_HOME/bin"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# Add local home bin
export PATH="$PATH:$HOME/bin"

# Add GOHOME and GOROOT, and add to PATH
#export GOPATH="${HOME}/dev/go"
#export GOHOME=$GOPATH
#export GOROOT="$(brew --prefix golang)/libexec"
#export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"

#pyenv 
eval "$(pyenv init -)"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/Cellar/tfenv/1.0.0/versions/0.11.10/terraform terraform

# gradlew function alias
gw () {
   local dir=$PWD
   while [[ $dir != '/' && ! -x $dir/gradlew ]]
   do
      dir=`dirname $dir`
   done
   if [ ! -x $dir/gradlew ]
   then
      echo "Cannot find gradlew script in this directory or its parents :-(" >&2
      return 1
   fi
   $dir/gradlew --console=plain --full-stacktrace --info "$@"
} |

# helper function to switch between k8s namespaces
kns() {
  k config set-context $(k config current-context) --namespace $1
}

klogs() {
  for i in {1..10}; do
    k logs -f -n wcp-robot $(k get pod -l name=wcp-robot -n wcp-robot -o name --field-selector status.phase==Running | xargs basename) wcp-robot && break || sleep 15;
  done
}

# aliases for kubectl for SPCs
alias kc4='kubectl --kubeconfig=$HOME/.kube/kube-config-s0004'
alias kc3='kubectl --kubeconfig=$HOME/.kube/kube-config-s0003'
alias kc14='kubectl --kubeconfig=$HOME/.kube/kube-config-s0014'
alias kc15='kubectl --kubeconfig=$HOME/.kube/kube-config-s0015'

# aliases to connect to SPCs
alias spc14='spc connect fedstg s0014 -p 9414 --developer-access -u $(whoami) -r malt-role -k $HOME/.kube/kube-config-s0014'
alias spc15='spc connect eng s0015 -p 9415 --developer-access -u $(whoami) -r malt-role -k $HOME/.kube/kube-config-s0015'
alias spc4='spc connect eng s0004 -p 9444 --developer-access -u $(whoami) -r malt-role -k $HOME/.kube/kube-config-s0004'
alias spc3='spc connect eng s0003 -p 9443 --developer-access -u $(whoami) -r malt-role -k $HOME/.kube/kube-config-s0003'

[[ /usr/local/bin/kubectl ]] && source <(kubectl completion zsh)

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# kotlinr alias
export PATH=$PATH:/usr/local/bin/kotlin
function kotlinr() {
  echo Compiling, please wait...
  kotlinc $1 -include-runtime -d out.jar
  java -jar out.jar
}

# jenv
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
